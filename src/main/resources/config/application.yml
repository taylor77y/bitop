# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================


#    client:
#        config:
#            default:
#                connectTimeout: 5000
#                readTimeout: 5000

# See https://github.com/Netflix/Hystrix/wiki/Configuration



spring:
    application:
        name: bitop
    profiles:
        # The commented value for `active` can be replaced with valid Spring profiles to load.
        # Otherwise, it will be filled in by maven when building the WAR file
        # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
        active: #spring.profiles.active#

    jackson:
#        property-naming-strategy: SNAKE_CASE
    messages:
        basename: i18n/messages
    mvc:
        favicon:
#            enabled: false
    thymeleaf:
        mode: HTML
    output:
        ansi:
            enabled: always
    rabbitmq:
        host: localhost
        port: 5672
        username: guest
        password: guest

    datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        druid: # 全局druid参数，绝大部分值和默认保持一致。(现已支持的参数如下,不清楚含义不要乱设置)
            master:
                url: jdbc:mysql://127.0.0.1:3306/bitop?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=Asia/Shanghai
                username: root
                password: root
            # 连接池的配置信息
            # 初始化大小，最小，最大
            initialSize: 5
            minIdle: 10
            maxActive: 30
            # 配置获取连接等待超时的时间
            maxWait: 60000
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            timeBetweenEvictionRunsMillis: 60000
            # 配置一个连接在池中最小生存的时间，单位是毫秒
            minEvictableIdleTimeMillis: 300000
            maxEvictableIdleTimeMillis: 900000
            validationQuery: SELECT 1 FROM DUAL
            testWhileIdle: true
            testOnBorrow: false
            testOnReturn: false
            # 打开PSCache，并且指定每个连接上PSCache的大小
            poolPreparedStatements: true
            maxPoolPreparedStatementPerConnectionSize: 20
            webStatFilter:
                enabled: true
            statViewServlet:
                enabled: true
                allow:
                url-pattern: /druid/*
                login-username:
                login-password:
            filter:
                stat:
                    enabled: true
                    log-slow-sql: true
                    slow-sql-millis: 1000
                    merge-sql: true
                wall:
                    config:
                        multi-statement-allow: true
            # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
            connectionProperties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000

server:
    port: 8060
    servlet:
        context-path:
        session:
            cookie:
                http-only: true

logging:
    level:
        ROOT: DEBUG
#        com.ezcoins: DEBUG
        org.springframework: DEBUG
#        io.lettuce.core.protocol: warn


mybatis-plus:
    configuration:
        cache-enabled: true
        use-generated-keys: true
        default-executor-type: reuse
        #log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl
        #开启SQL语句打印
        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
        #自动驼峰命名
        map-underscore-to-camel-case: true
    mapper-locations: classpath*:mybatis/**/*Mapper.xml
    global-config:
        db-config:
            #主键类型  0:"数据库ID自增",1:"该类型为未设置主键类型", 2:"用户输入ID",3:"全局唯一ID (数字类型唯一ID)", 4:"全局唯一ID UUID",5:"字符串全局唯一ID (idWorker 的字符串表示)";
            id-type: ASSIGN_ID
            # 默认数据库表下划线命名
            table-underline: true
            logic-delete-value: 1 # 逻辑已删除值(默认为 1)
            logic-not-delete-value: 0 # 逻辑未删除值(默认为 0)
    # 配置mybatis 数据返回类型别名（默认别名为类名）
    type-aliases-package: com.ezcoins.project.**.domain



# Properties to be exposed on the /info management endpoint
info:
    # Comma separated list of profiles that will trigger the ribbon to show
    display-ribbon-on-profiles: "dev"

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================



# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# aipay:
